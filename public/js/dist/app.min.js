var topicnet=angular.module("topicnet",["topicnet.directives","topicnet.controllers","ngDragDrop"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{controller:"RootController",templateUrl:"views/root.html"}).when("/signup",{controller:"SignupController",templateUrl:"views/signup.html"}).when("/login",{controller:"LoginController",templateUrl:"views/login.html"}).when("/topics/:topicId",{controller:"TopicDetailController",templateUrl:"views/topic-detail.html"}).when("/topics/:topicId/resources/add",{controller:"AddResourceController",templateUrl:"views/resource-add.html"}).when("/resources/:resourceId",{controller:"ResourceDetailController",templateUrl:"views/resource-detail.html"}).otherwise({redirectTo:"/"})}]);topicnet.controllers=angular.module("topicnet.controllers",[]),topicnet.controllers.controller("AddResourceController",function($scope,$http,$routeParams,$location){function redirectToTopic(){$location.path("topics/"+$scope.topic.id)}$http.get("/topics/"+$routeParams.topicId).success(function(topic){$scope.topic=topic}).error(function(message){$scope.$emit("error",message)}),$scope.submitUrl=function(){$scope.url&&$http.get("/resources?url="+encodeURIComponent($scope.url)).success(function(resources){$scope.urlSubmitted=!0,resources.length>0?($scope.title=resources[0].title,$scope.source=resources[0].source,$scope.resourceId=resources[0].id,$scope.verb=resources[0].verb,$scope.isNewResource=!1,$scope.statusMessage="Resource was found in the system"):($scope.title=null,$scope.source=null,$scope.resourceId=null,$scope.isNewResource=!0,$scope.statusMessage="Resource was not in the system. Please enter details")}).error(function(message){$scope.$emit("error",message)})},$scope.add=function(){var resourceData={title:$scope.title,url:$scope.url,source:$scope.source,verb:$scope.verb.toLowerCase()};$scope.isNewResource?$http.post("/resources",resourceData).success(function(resource){$http.post("/topics/"+$scope.topic.id+"/resources",{resid:resource.id}).success(function(){redirectToTopic()}).error(function(message){$scope.$emit("error",message)})}).error(function(message){$scope.$emit("error",message)}):$http.post("/topics/"+$scope.topic.id+"/resources",{resid:$scope.resourceId}).success(function(){redirectToTopic()}).error(function(message){$scope.$emit("error",message)})},$scope.cancel=function(){redirectToTopic()}}),topicnet.controllers.controller("AddTopicController",function($scope,$http){$scope.$on("topicSelected",function(e,topic){$scope.selectedTopic=topic}),$scope.show=function(){$scope.formVisible=!0},$scope.add=function(){$scope.selectedTopic&&$scope.selectedTopic.hasOwnProperty("id")?($scope.selectedTopic.score=0,$scope.linkfn($scope.selectedTopic)):$http.post("/topics",{name:$scope.searchQuery}).success(function(topic){topic.score=0,$scope.linkfn(topic)}).error(function(message){$scope.$emit("error",message)}),$scope.clear()},$scope.clear=function(){$scope.formVisible=!1,$scope.searchQuery=""}}),topicnet.controllers.controller("AlertController",function($scope){function showAlert(message,type){$scope.message=message,$scope.type=type,setTimeout(function(){$scope.message===message&&($scope.message=null,$scope.$apply())},3e3)}$scope.$on("error",function(e,message){showAlert(message,"error")}),$scope.$on("success",function(e,message){showAlert(message,"success")}),$scope.$on("info",function(e,message){showAlert(message,"info")})}),topicnet.controllers.controller("AuthenticationController",function($scope,$location,AuthenticationService){AuthenticationService.readCurrentUser().error(function(message){$scope.$emit("error",message)}),$scope.$watch(AuthenticationService.currentUser,function(currentUser){$scope.currentUser=currentUser}),$scope.logout=function(){AuthenticationService.logout().error(function(message){$scope.$emit("error",message)})}}),topicnet.controllers.controller("LoginController",function($scope,$rootScope,$location,AuthenticationService){function redirectToHome(){$location.path("/")}$scope.login=function(){return $scope.email?$scope.password?(AuthenticationService.login($scope.email,$scope.password).success(function(user){$scope.$emit("success","Welcome "+user.email+"!"),redirectToHome()}).error(function(message){$scope.$emit("error",message)}),void 0):($scope.$emit("error","Please enter your password."),void 0):($scope.$emit("error","Please enter a valid email address."),void 0)}}),topicnet.controllers.controller("RelatedTopicController",function($scope,$http){$scope.linkfn=function(toTopic){$http.post("/topics/"+$scope.topic.id+"/"+$scope.rel,{toid:toTopic.id}).success(function(){toTopic.score=0,$scope.topic[$scope.rel].push(toTopic)}).error(function(message){$scope.$emit("error",message)})},$scope.hideTopic=function(topic,rel){$http.post("/topics/"+$scope.topic.id+"/"+rel+"/"+topic.id+"/hide").success(function(){$scope.topic[rel]=$scope.topic[rel].filter(function(t){return t.id!==topic.id})})},$scope.moveTopic=function(topic,rel,toTopic){$http.post("/topics/"+$scope.topic.id+"/"+rel+"/"+topic.id+"/hide").success(function(){return $http.post("/topics/"+topic.id+"/"+rel+"/"+toTopic.id+"/affirm")}).success(function(){$scope.topic[rel]=$scope.topic[rel].filter(function(t){return t.id!==topic.id})})},$scope.dropped=function(event,ui){var dropTarget=$(event.target);dropTarget.removeClass("droptarget");var targetTopic={id:dropTarget.data("topic-id")},rel=dropTarget.data("rel"),resid=ui.draggable.data("resource-id");resid&&$scope.moveResource({id:resid},rel,targetTopic);var topicid=ui.draggable.data("topic-id");topicid&&$scope.moveTopic({id:topicid},rel,targetTopic)},$scope.dragstart=function(event){$(event.target).addClass("dragging"),$scope.topic.isDragging=!0,$scope.$apply()},$scope.dragstop=function(event){$(event.target).removeClass("dragging"),$scope.topic.isDragging=!1,$scope.$apply()},$scope.dragover=function(event){$(event.target).addClass("droptarget")},$scope.dragout=function(event){$(event.target).removeClass("droptarget")}}),topicnet.controllers.controller("ResourceDetailController",function($scope,$http,$routeParams){$http.get("/resources/"+$routeParams.resourceId).success(function(resource){$scope.resource=resource}).error(function(message){$scope.$emit("error",message)})}),topicnet.controllers.controller("RootController",function($scope,$http){$http.get("/topics").success(function(topics){$scope.rootTopics=topics}),$scope.linkfn=function(topic){$http.post("/topics/"+topic.id+"/root").success(function(){$scope.rootTopics.push(topic)}).error(function(message){$scope.$emit("error",message)})},$scope.removeRoot=function(topic){$http["delete"]("/topics/"+topic.id+"/root").success(function(){$scope.rootTopics=$scope.rootTopics.filter(function(t){return t.id!==topic.id})}).error(function(message){$scope.$emit("error",message)})}}),topicnet.controllers.controller("SignupController",function($scope,$location,AuthenticationService){function redirectToHome(){$location.path("/")}$scope.signUp=function(){return $scope.email?!$scope.password||6>$scope.password.length?($scope.$emit("error","Please enter a password that is at least 6 characters long."),void 0):(AuthenticationService.signup($scope.email,$scope.password).then(function(){return AuthenticationService.login($scope.email,$scope.password)}).success(function(user){redirectToHome(),$scope.$emit("success","Welcome "+user.email+"! Thanks for signing up!")}).error(function(message){$scope.$emit("error",message)}),void 0):($scope.$emit("error","Please enter a valid email address."),void 0)}}),topicnet.controllers.controller("TopicDetailController",function($scope,$http,$routeParams){function filterHidden(items){return items.filter(function(i){return!i.hidden})}$http.get("/topics/"+$routeParams.topicId).success(function(topic){$scope.topic=topic,$scope.topic.resources=filterHidden($scope.topic.resources||[]),$scope.topic.sub=filterHidden($scope.topic.sub||[]),$scope.topic.next=filterHidden($scope.topic.next||[]),$scope.editedTopicName=topic.name}).error(function(message){$scope.$emit("error",message)}),$scope.update=function(){$http.put("/topics/"+$scope.topic.id,{name:$scope.editedTopicName}).success(function(){$scope.topic.name=$scope.editedTopicName}).error(function(message){$scope.$emit("error",message)})},$scope.dragstart=function(event){$(event.target).addClass("dragging"),$scope.topic.isDragging=!0,$scope.$apply()},$scope.dragstop=function(event){$(event.target).removeClass("dragging"),$scope.topic.isDragging=!1,$scope.$apply()},$scope.hideResource=function(resource){$http.post("/topics/"+$scope.topic.id+"/resources/"+resource.id+"/hide").success(function(){$scope.topic.resources=$scope.topic.resources.filter(function(r){return r.id!==resource.id})})},$scope.moveResource=function(resource,relationshipType,toTopic){$http.post("/topics/"+$scope.topic.id+"/resources/"+resource.id+"/hide").success(function(){return $http.post("/topics/"+$scope.topic.id+"/"+relationshipType+"/"+toTopic.id+"/affirm")}).success(function(){$scope.topic.resources=$scope.topic.resources.filter(function(r){return r.id!==resource.id})})}}),angular.module("topicnet.directives",[]).directive("focusOn",function(){return function(scope,element,attrs){scope.$watch(attrs.focusOn,function(){attrs.focusOn&&window.setTimeout(function(){element.focus()},0)})}}),angular.module("topicnet.directives",[]).directive("modalAutofocus",function(){return function(scope,element){$(element).on("shown",function(){$(this).find("[autofocus]").focus()})}}),angular.module("topicnet.directives",[]).directive("typeaheadTopicSearch",function(){return function(scope,el){el.typeahead({source:function(typeahead,query){return $.get("/topics",{q:query.toLowerCase()}).success(function(topics){var foundTopic=_.find(topics,function(t){return t.name.toLowerCase()===query.toLowerCase()});void 0===foundTopic&&(foundTopic={name:query},topics.push(foundTopic)),scope.$broadcast("topicSelected",foundTopic);var response=typeahead.process(topics);return response})},property:"name",onselect:function(item){scope.$broadcast("topicSelected",item)}})}}),topicnet.factory("AuthenticationService",function($http){function login(email,password){var cryptedPassword=""+CryptoJS.SHA256(password);return $http.post("/login",{email:email,password:cryptedPassword}).success(function(user){return currentUser=user,user})}var currentUser;return{readCurrentUser:function(){return $http.get("/user").success(function(user){return currentUser=user,user})},signup:function(email,password){var cryptedPassword=""+CryptoJS.SHA256(password);return $http.post("/user",{email:email,password:cryptedPassword}).success(function(){return login(email,password)})},login:login,logout:function(){return $http.post("/logout",{}).success(function(){currentUser=void 0})},currentUser:function(){return currentUser}}});
//@ sourceMappingURL=/js/dist/app.min.js.map