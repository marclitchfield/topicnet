angular.module("artoplasm",["artoplasm.directives"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{controller:RootController,templateUrl:"views/root.html"}).when("/topics/:topicId",{controller:TopicDetailController,templateUrl:"views/topic-detail.html"}).when("/topics/:topicId/resources/add",{controller:AddResourceController,templateUrl:"views/resource-add.html"}).when("/resources/:resourceId",{controller:ResourceDetailController,templateUrl:"views/resource-detail.html"}).otherwise({redirectTo:"/"})}]);var AddResourceController=["$scope","$http","$routeParams","$location",function($scope,$http,$routeParams,$location){function redirectToTopic(){$location.path("topics/"+$scope.topic.id)}$http.get("/topics/"+$routeParams.topicId).success(function(topic){$scope.topic=topic}).error(function(message){$scope.$emit("error",message)}),$scope.submitUrl=function(){$scope.url&&$http.get("/resources?url="+encodeURIComponent($scope.url)).success(function(resources){$scope.urlSubmitted=!0,resources.length>0?($scope.title=resources[0].title,$scope.source=resources[0].source,$scope.resourceId=resources[0].id,$scope.verb=resources[0].verb,$scope.isNewResource=!1,$scope.statusMessage="Resource was found in the system"):($scope.title=null,$scope.source=null,$scope.resourceId=null,$scope.isNewResource=!0,$scope.statusMessage="Resource was not in the system. Please enter details")}).error(function(message){$scope.$emit("error",message)})},$scope.add=function(){var resourceData={title:$scope.title,url:$scope.url,source:$scope.source,verb:$scope.verb.toLowerCase()};$scope.isNewResource?$http.post("/resources",resourceData).success(function(resource){$http.post("/topics/"+$scope.topic.id+"/resources",{resid:resource.id}).success(function(){redirectToTopic()}).error(function(message){$scope.$emit("error",message)})}).error(function(message){$scope.$emit("error",message)}):$http.post("/topics/"+$scope.topic.id+"/resources",{resid:$scope.resourceId}).success(function(){redirectToTopic()}).error(function(message){$scope.$emit("error",message)})},$scope.cancel=function(){redirectToTopic()}}],AddTopicController=["$scope","$http",function($scope,$http){$scope.$on("topicSelected",function(e,topic){$scope.selectedTopic=topic}),$scope.show=function(){$scope.formVisible=!0},$scope.add=function(){$scope.selectedTopic&&$scope.selectedTopic.hasOwnProperty("id")?($scope.selectedTopic.score=0,$scope.linkfn($scope.selectedTopic)):$http.post("/topics",{name:$scope.searchQuery}).success(function(topic){topic.score=0,$scope.linkfn(topic)}).error(function(message){$scope.$emit("error",message)}),$scope.clear()},$scope.clear=function(){$scope.formVisible=!1,$scope.searchQuery=""}}],ErrorController=["$scope",function($scope){$scope.$on("error",function(e,message){$scope.errorMessage=message,setTimeout(function(){$scope.errorMessage===message&&($scope.errorMessage=null,$scope.$apply())},3e3)})}],RelatedTopicController=["$scope","$http",function($scope,$http){function vote(relationship,toTopic,dir){var voteUrl="/topics/"+$scope.topic.id+"/"+relationship+"/"+toTopic.id+"/vote";$http.post(voteUrl,{dir:dir}).success(function(response){toTopic.score=response.score}).error(function(message){$scope.$emit("error",message)})}$scope.linkfn=function(toTopic){$http.post("/topics/"+$scope.topic.id+"/"+$scope.rel,{toid:toTopic.id}).success(function(){toTopic.score=0,$scope.topic[$scope.rel].push(toTopic)}).error(function(message){$scope.$emit("error",message)})},$scope.removeLink=function(toTopic){$http["delete"]("/topics/"+$scope.topic.id+"/"+$scope.rel+"/"+toTopic.id).success(function(){$scope.topic[$scope.rel]=$scope.topic[$scope.rel].filter(function(t){return t.id!==toTopic.id})}).error(function(message){$scope.$emit("error",message)})},$scope.upvote=function(relationship,toTopic){vote(relationship,toTopic,"up")},$scope.downvote=function(relationship,toTopic){vote(relationship,toTopic,"down")}}],ResourceDetailController=["$scope","$http","$routeParams",function($scope,$http,$routeParams){$http.get("/resources/"+$routeParams.resourceId).success(function(resource){$scope.resource=resource}).error(function(message){$scope.$emit("error",message)})}],RootController=["$scope","$http",function($scope,$http){$http.get("/topics").success(function(topics){$scope.rootTopics=topics}),$scope.linkfn=function(topic){$http.post("/topics/"+topic.id+"/root").success(function(){$scope.rootTopics.push(topic)}).error(function(message){$scope.$emit("error",message)})},$scope.removeRoot=function(topic){$http["delete"]("/topics/"+topic.id+"/root").success(function(){$scope.rootTopics=$scope.rootTopics.filter(function(t){return t.id!==topic.id})}).error(function(message){$scope.$emit("error",message)})}}],TopicDetailController=["$scope","$http","$routeParams","$location",function($scope,$http,$routeParams){function vote(resource,dir){var voteUrl="/topics/"+$scope.topic.id+"/resources/"+resource.id+"/vote";$http.post(voteUrl,{dir:dir}).success(function(response){resource.score=response.score}).error(function(message){$scope.$emit("error",message)})}$http.get("/topics/"+$routeParams.topicId).success(function(topic){$scope.topic=topic,$scope.topic.resources=$scope.topic.resources||[],$scope.topic.sub=$scope.topic.sub||[],$scope.topic.next=$scope.topic.next||[],$scope.editedTopicName=topic.name}).error(function(message){$scope.$emit("error",message)}),$scope.update=function(){$http.put("/topics/"+$scope.topic.id,{name:$scope.editedTopicName}).success(function(){$scope.topic.name=$scope.editedTopicName}).error(function(message){$scope.$emit("error",message)})},$scope.upvote=function(resource){vote(resource,"up")},$scope.downvote=function(resource){vote(resource,"down")}}];angular.module("artoplasm.directives",[]).directive("focusOn",function(){return function(scope,element,attrs){scope.$watch(attrs.focusOn,function(){attrs.focusOn&&window.setTimeout(function(){element.focus()},0)})}}),angular.module("artoplasm.directives",[]).directive("modalAutofocus",function(){return function(scope,element){$(element).on("shown",function(){$(this).find("[autofocus]").focus()})}}),angular.module("artoplasm.directives",[]).directive("typeaheadTopicSearch",function(){return function(scope,el){el.typeahead({source:function(typeahead,query){return $.get("/topics",{q:query.toLowerCase()}).success(function(topics){var foundTopic=_.find(topics,function(t){return t.name.toLowerCase()===query.toLowerCase()});void 0===foundTopic&&(foundTopic={name:query},topics.push(foundTopic)),scope.$broadcast("topicSelected",foundTopic);var response=typeahead.process(topics);return response})},property:"name",onselect:function(item){scope.$broadcast("topicSelected",item)}})}});
//@ sourceMappingURL=/js/dist/app.min.js.map